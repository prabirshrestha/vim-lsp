Describe integration#rust#document_formatting
    let s:rust_project_dir = expand("%:p:h") .'/test/testproject-rust'
    let s:server_name = 'rust-analyzer'

    Before
        % delete _
        if executable('rust-analyzer')
            call lsp#enable()
            exec 'bufdo! bd!'
            call lsp#register_server({
                \ 'name': s:server_name,
                \ 'cmd': ['rust-analyzer'],
                \ 'allowlist': ['rust'],
                \ 'root_uri':{server_info->lsp#utils#path_to_uri(lsp#utils#find_nearest_parent_file_directory(lsp#utils#get_buffer_path(), 'Cargo.toml'))},
                \ })
        endif
    End

    After
        if !executable('rust-analyzer')
            silent! call lsp#stop_server(s:server_name)
        endif
        % delete _
    End

    It should correctly format document when using LspDocumentFormatSync
        if !executable('rust-analyzer')
            Skip rust-analyzer not available
        endif

        set shiftwidth=4

        normal! m'
        execute printf('keepalt keepjumps edit %s', s:rust_project_dir . '/src/documentformat.rs')
        let l:original = getline(1, "$")

        while 1
            let l:server_status = lsp#get_server_status(s:server_name)
            call lsp#log(l:server_status)
            if l:server_status == 'running'
                break
            endif
            sleep 10m
        endwhile

        let l:counter = 0
        while 1
            if l:counter > 10 | break | endif
            let l:counter += 1
            call execute('LspDocumentFormatSync')
            let got = getline(1, "$")
            if got[0] != l:original[0] | break | endif
            sleep 100m
        endwhile

        let want = [
            \ 'fn format() {',
            \ '    unimplemented!();',
            \ '}'
            \ ]
        Assert Equals(l:got, want)
    End

End
